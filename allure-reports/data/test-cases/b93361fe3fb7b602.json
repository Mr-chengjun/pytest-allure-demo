{
  "uid" : "b93361fe3fb7b602",
  "name" : "接口测试数据-{\"user\":2}",
  "fullName" : "test_case.test_api.TestInterface#test_api",
  "historyId" : "171460212d588426c8a7b47631ceb06f",
  "time" : {
    "start" : 1579505569131,
    "stop" : 1579505569134,
    "duration" : 3
  },
  "description" : "用例描述：接口功能测试",
  "descriptionHtml" : "<p>用例描述：接口功能测试</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: 测试未通过，测试数据：{\"user\":2},返回结果：结果\nassert 'post' == 'get'\n  - post\n  + get",
  "statusTrace" : "self = <test_case.test_api.TestInterface object at 0x000001FCB898E048>\nmethods = 'post', url = 'http://192.168.0.185:7012/getuser', data = '{\"user\":2}'\nexpect = 'get', login = 123\nheaders = {'APIToken': '48b5043', 'JWT': 123, 'Signature': '97125d2de9e018cf2a45049e912ed98d', 'Timestamp': '1579505569'}\n\n    @pytest.mark.parametrize('methods, url, data, expect', user_data)\n    @allure.story(\"接口测试函数\")\n    @allure.title(\"接口测试数据-{data}\")\n    def test_api(self, methods, url, data, expect, login, headers):\n        \"\"\"用例描述：接口功能测试\"\"\"\n        url = urljoin(BASE_URL, url)\n        print(\"登录结果：\", login)\n        headers['JWT'] = login\n        print(\"登录后的headers:\", headers)\n    \n        if methods.lower() == 'get':\n            # res = requests.get(url, params=data)\n            allure.attach(\"用例参数\", \"{}\".format(data))\n            assert methods == expect, \"测试未通过，测试数据：{},返回结果：{}\".format(data, \"结果\")\n            print(\"测试通过\")\n        if methods.lower() == \"post\":\n            # res = requests.post(url, data=data)\n>           assert methods == expect, \"测试未通过，测试数据：{},返回结果：{}\".format(data, \"结果\")\nE           AssertionError: 测试未通过，测试数据：{\"user\":2},返回结果：结果\nE           assert 'post' == 'get'\nE             - post\nE             + get\n\ntest_case\\test_api.py:29: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "login",
    "time" : {
      "start" : 1579505569116,
      "stop" : 1579505569116,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "headers",
    "time" : {
      "start" : 1579505569131,
      "stop" : 1579505569131,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "用例描述：接口功能测试",
    "status" : "failed",
    "statusMessage" : "AssertionError: 测试未通过，测试数据：{\"user\":2},返回结果：结果\nassert 'post' == 'get'\n  - post\n  + get",
    "statusTrace" : "self = <test_case.test_api.TestInterface object at 0x000001FCB898E048>\nmethods = 'post', url = 'http://192.168.0.185:7012/getuser', data = '{\"user\":2}'\nexpect = 'get', login = 123\nheaders = {'APIToken': '48b5043', 'JWT': 123, 'Signature': '97125d2de9e018cf2a45049e912ed98d', 'Timestamp': '1579505569'}\n\n    @pytest.mark.parametrize('methods, url, data, expect', user_data)\n    @allure.story(\"接口测试函数\")\n    @allure.title(\"接口测试数据-{data}\")\n    def test_api(self, methods, url, data, expect, login, headers):\n        \"\"\"用例描述：接口功能测试\"\"\"\n        url = urljoin(BASE_URL, url)\n        print(\"登录结果：\", login)\n        headers['JWT'] = login\n        print(\"登录后的headers:\", headers)\n    \n        if methods.lower() == 'get':\n            # res = requests.get(url, params=data)\n            allure.attach(\"用例参数\", \"{}\".format(data))\n            assert methods == expect, \"测试未通过，测试数据：{},返回结果：{}\".format(data, \"结果\")\n            print(\"测试通过\")\n        if methods.lower() == \"post\":\n            # res = requests.post(url, data=data)\n>           assert methods == expect, \"测试未通过，测试数据：{},返回结果：{}\".format(data, \"结果\")\nE           AssertionError: 测试未通过，测试数据：{\"user\":2},返回结果：结果\nE           assert 'post' == 'get'\nE             - post\nE             + get\n\ntest_case\\test_api.py:29: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b9494cfe8862732d",
      "name" : "stdout",
      "source" : "b9494cfe8862732d.txt",
      "type" : "text/plain",
      "size" : 153
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "接口测试函数"
  }, {
    "name" : "feature",
    "value" : "接口测试"
  }, {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestInterface"
  }, {
    "name" : "host",
    "value" : "DESKTOP-SIU8DJJ"
  }, {
    "name" : "thread",
    "value" : "9632-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "'{\"user\":2}'"
  }, {
    "name" : "expect",
    "value" : "'get'"
  }, {
    "name" : "methods",
    "value" : "'post'"
  }, {
    "name" : "url",
    "value" : "'/getuser'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "b93361fe3fb7b602.json",
  "parameterValues" : [ "'{\"user\":2}'", "'get'", "'post'", "'/getuser'" ]
}